# Copyright Microsoft Corporation
# This Sample Code is provided for the purpose of illustration only and is not intended to be used in a production environment.
# THIS SAMPLE CODE AND ANY RELATED INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE. 
# We grant You a nonexclusive, royalty-free right to use and modify the Sample Code and to reproduce and distribute the object code form of the Sample Code, provided that You agree:
# (i) to not use Our name, logo, or trademarks to market Your software product in which the Sample Code is embedded;
# (ii) to include a valid copyright notice on Your software product in which the Sample Code is embedded; and
# (iii) to indemnify, hold harmless, and defend Us and Our suppliers from and against any claims or lawsuits, including attorneysâ€™ fees, that arise or result from the use or distribution of the Sample Code.
# Please note: None of the conditions outlined in the disclaimer above will supersede the terms and conditions contained within the Premier Customer Services Description.

# This workflow is triggered manually (workflow_dispatch) and deploys an managed solution to a target environment
# inputs parameters:
# solution-name: name of the solution to worked on from Power Platform
# branch-type: type of branch
# branch-name: name of the git branch
# use-setting-file: setting file
# Required reuseable workflows: workflow-import-solution.yml
# Author: William Tsoi (Microsoft)
# Date: 2024-07-16

name: Deploy Managed Solution with Actions

on:
  workflow_dispatch:
    inputs:
      solution-name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
        default:  'contoso_university_core'
      branch-type:
        required: false
        type: choice
        options:
        - feature
        - hotfix
        - development
        - main
        default:
          main
      branch-name:
        description: 'name of the git branch'
        type: string
        required: false
        default:  ''
      use-setting-file:
        description: 'setting file'
        required: true
        type: boolean
        default: false
jobs:
  deploy-staging-setup:
    environment: 'Contoso Staging'
    runs-on: ubuntu-latest
    outputs:
      setting-file: ${{ steps.staging-setting-file-variables.outputs.setting-file }}
    steps: 
    - env:
        EVENT_CONTEXT: ${{ toJSON(github.event) }}
      run: |
        echo $EVENT_CONTEXT
    - name: Staging Variables      
      run: |        
        write-Host "ref ${{ github.ref }}"        
        write-Host "GITHUB_REF ${{ github.GITHUB_REF }}"
        if ('${{ inputs.use-setting-file }}' -eq 'true')
        {
          if (Test-Path -LiteralPath "settings/${{ inputs.solution-name }}-Contoso Staging.json") {
            $settingFile = 'settings/${{ inputs.solution-name }}-Contoso Staging.json'
          } else {
            $settingFile = ''
          }        
        } else {
          $settingFile = ''
        }
        echo "setting-file=$settingFile" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append; 
      shell: pwsh
    - name: Set environment variables to output
      id: staging-setting-file-variables
      run: |
        echo "setting-file=${{ env.setting-file }}" >> "$GITHUB_OUTPUT"
  deploy-staging:
    needs: [deploy-staging-setup]
    uses: Contoso-Enterprise/PowerPlatformALM/.github/workflows/workflow-import-solution.yml@main
    with: 
      environment: 'Contoso Staging'
      solution-name: ${{ inputs.solution-name }}
      branch-name: '${{ inputs.branch-name }}'
      branch-type: '${{ inputs.branch-type }}'
      folder-path: '.'
      settings-file: ${{ needs.deploy-staging-setup.outputs.setting-file }}
      managed: true
    secrets: inherit
  deploy-production-setup:
    needs: [deploy-staging]
    environment: 'Contoso Production'
    runs-on: ubuntu-latest
    outputs:
      setting-file: ${{ steps.production-setting-file-variables.outputs.setting-file }}
    steps: 
    - name: Production Variables      
      run: |        
        write-Host "ref ${{ github.ref }}"        
        write-Host "GITHUB_REF ${{ github.GITHUB_REF }}"
        if (${{ inputs.use-setting-file }} -eq $true)
        {

          if (Test-Path -LiteralPath "settings/${{ inputs.solution-name }}-Contoso Staging.json") {
            $settingFile = 'settings/${{ inputs.solution-name }}-Contoso Production.json'
          } else {
            $settingFile = ''
          }
        } else {
          $settingFile = ''
        }
        echo "setting-file=$settingFile" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append; 
      shell: pwsh
    - name: Set environment variables to output
      id: production-setting-file-variables
      run: |
        echo "setting-file=${{ env.setting-file }}" >> "$GITHUB_OUTPUT"
  deploy-production:
    needs: [deploy-production-setup]
    uses: Contoso-Enterprise/PowerPlatformALM/.github/workflows/workflow-import-solution.yml@main
    with: 
      environment: 'Contoso Production'
      solution-name: ${{ inputs.solution-name }}
      branch-name: '${{ inputs.branch-name }}'
      branch-type: '${{ inputs.branch-type }}'
      folder-path: '.'
      settings-file: ${{ needs.deploy-production-setup.outputs.setting-file }}
      managed: true
    secrets: inherit