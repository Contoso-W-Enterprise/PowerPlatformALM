# Copyright Microsoft Corporation
# This Sample Code is provided for the purpose of illustration only and is not intended to be used in a production environment.
# THIS SAMPLE CODE AND ANY RELATED INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE. 
# We grant You a nonexclusive, royalty-free right to use and modify the Sample Code and to reproduce and distribute the object code form of the Sample Code, provided that You agree:
# (i) to not use Our name, logo, or trademarks to market Your software product in which the Sample Code is embedded;
# (ii) to include a valid copyright notice on Your software product in which the Sample Code is embedded; and
# (iii) to indemnify, hold harmless, and defend Us and Our suppliers from and against any claims or lawsuits, including attorneysâ€™ fees, that arise or result from the use or distribution of the Sample Code.
# Please note: None of the conditions outlined in the disclaimer above will supersede the terms and conditions contained within the Premier Customer Services Description.

# This GitHub Actions workflow is triggered when there is a push event to the `development/**`, `release/**`, `hotfix/**`, or `main` branches, and when a pull request is closed targeting the `release/**` or `main` branches. It specifically monitors changes in the `src/contoso_university_core/**` directory.
# The workflow consists of the following jobs:
# 1. `setup` job:
#   - Runs only if the pull request is merged (`github.event.pull_request.merged == true`).
#   - Sets up the environment and permissions.
#   - Runs on the `ubuntu-latest` runner.
#   - Performs the following steps:
#     - Prints the `EVENT_CONTEXT` environment variable.
#     - Prints the values of the `solution-name` and `ref` environment variables.
#     - Prints the values of the `solution-name` and `ref` environment variables using PowerShell.
#     - Displays the file paths of all items in the current directory using PowerShell.
# 2. `pack-set-variables` job:
#   - Depends on the completion of the `setup` job.
#   - Runs on the `ubuntu-latest` runner.
#   - Sets the `solution-name` and `branch-name` outputs.
#   - Performs the following steps:
#     - Appends the values of `solution-name` and `branch-name` to the `$GITHUB_OUTPUT` file.
#     - Prints the values of the `solution-name` and `branch-name` outputs.
# 3. `pack` job:
#   - Depends on the completion of the `pack-set-variables` job.
#   - Uses the `Contoso-Enterprise/PowerPlatformALM/.github/workflows/workflow-pack-solution.yml@main` action.
#   - Passes the `solution-name` and `branch-name` outputs as inputs to the action.
# The purpose of this workflow is to trigger the packaging of the `contoso_university_core` solution when changes are made to the specified branches and directory.
# Author: William Tsoi (Microsoft)
# Date: 2024-07-16

name: PR Triggered Pack Contoso_university_core solution with Actions 

on:
  push:
    branches:
      - 'development/**'
      - 'release/**'
      - 'hotfix/**'
      - 'main'
    paths:
      - 'src/contoso_university_core/**'
  pull_request_target:
    types:
      - closed
    branches:
      - 'release/**'
      - 'main'     
    paths:
      - 'src/contoso_university_core/**'
env:
  solution-name: 'contoso_university_core'
jobs:
  setup:
    if: github.event.pull_request.merged == true
    environment: ${{ inputs.source-environment }}
    permissions:
      actions: read
      repository-projects: write
      contents: write
    runs-on: ubuntu-latest
    steps:
    - env:
        EVENT_CONTEXT: ${{ toJSON(github.event) }}
      run: |
        echo $EVENT_CONTEXT

    - name: Variables      
      run: | 
        echo "env Solution Name brace: ${{ env.solution-name }}"
        echo "ref ${{ github.ref }}"        
        echo "${{ env.EVENT_CONTEXT.ref }}"
    - name: variables pwsh
      run: |
        write-Host '${{ env.solution-name }}'
        write-Host '${{ env.EVENT_CONTEXT.ref }}'
      shell: pwsh
    - name: Debug output
      shell: pwsh
      run: |
        Get-ChildItem  -Recurse | foreach { write-host $_.FullName }
  pack-set-variables:
    needs: setup
    runs-on: ubuntu-latest
    outputs:
      solution-name: ${{ steps.pack-variables.outputs.solution-name }}
      branch-name: ${{ steps.pack-variables.outputs.branch-name }}
    steps:
    - name: Set environment variables to output
      id: pack-variables
      run: |
        echo "solution-name=${{ env.solution-name }}" >> "$GITHUB_OUTPUT"
        echo "branch-name=${{ github.ref }}" >> "$GITHUB_OUTPUT"
    - name: show variables
      run: |
        echo "${{ needs.pack-set-variables.outputs.solution-name }}"
        echo "${{ needs.pack-set-variables.outputs.branch-name }}"
        echo "${{ steps.pack-variables.outputs.solution-name }}"
        echo "${{ steps.pack-variables.outputs.branch-name }}"

  pack:
    needs: pack-set-variables
    uses: Contoso-Enterprise/PowerPlatformALM/.github/workflows/workflow-pack-solution.yml@main
    with: 
      solution-name: ${{ needs.pack-set-variables.outputs.solution-name }}
      branch-name: '${{ needs.pack-set-variables.outputs.branch-name }}'
