# Copyright Microsoft Corporation
# This Sample Code is provided for the purpose of illustration only and is not intended to be used in a production environment.
# THIS SAMPLE CODE AND ANY RELATED INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE. 
# We grant You a nonexclusive, royalty-free right to use and modify the Sample Code and to reproduce and distribute the object code form of the Sample Code, provided that You agree:
# (i) to not use Our name, logo, or trademarks to market Your software product in which the Sample Code is embedded;
# (ii) to include a valid copyright notice on Your software product in which the Sample Code is embedded; and
# (iii) to indemnify, hold harmless, and defend Us and Our suppliers from and against any claims or lawsuits, including attorneysâ€™ fees, that arise or result from the use or distribution of the Sample Code.
# Please note: None of the conditions outlined in the disclaimer above will supersede the terms and conditions contained within the Premier Customer Services Description.

name: workflow-get-solution-version

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      solution-name:
        description: "Solution Name"
        type: string
        required: true
        default: 'OrgDemo'
      folder-path:
        type: string
        required: false
        default: '.'
      branch-name:
        type: string
        required: false
        default: 'main'
    outputs:
      solution-version:
        description: "Solution Version"
        value: ${{ jobs.get-solution-version.outputs.solution-version }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  get-solution-version:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      solution-version: ${{ steps.get-solution-version-step.outputs.solution-version }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - id: check-branch-exists
        uses: GuillaumeFalourd/branch-exists@v1
        with:
          branch: ${{ inputs.branch-name }}
      - name: debug check exists
        run: echo "${{ steps.check-branch-exists.outputs }}"

      - name: Checkout branch if exists
        if: ${{ steps.check-branch-exists.outputs.exists == true }}
        uses: actions/checkout@v4
        with:
          lfs: true
          ref: ${{ inputs.branch-name }}
      - name: Checkout branch main
        if: ${{ steps.check-branch-exists.outputs.exists != true }}
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Get solution version
        id: get-solution-version-step
        run: |
          . "PowerShell/PowerPlatform-Utility.ps1"
          $version = Get-SolutionVersion -solutionName '${{ inputs.solution-name }}' -folderPath '${{ inputs.folder-path }}'
          echo "solution-version=$version" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append;
        shell: pwsh
