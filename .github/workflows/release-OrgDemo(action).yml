# Copyright Microsoft Corporation
# This Sample Code is provided for the purpose of illustration only and is not intended to be used in a production environment.
# THIS SAMPLE CODE AND ANY RELATED INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE. 
# We grant You a nonexclusive, royalty-free right to use and modify the Sample Code and to reproduce and distribute the object code form of the Sample Code, provided that You agree:
# (i) to not use Our name, logo, or trademarks to market Your software product in which the Sample Code is embedded;
# (ii) to include a valid copyright notice on Your software product in which the Sample Code is embedded; and
# (iii) to indemnify, hold harmless, and defend Us and Our suppliers from and against any claims or lawsuits, including attorneysâ€™ fees, that arise or result from the use or distribution of the Sample Code.
# Please note: None of the conditions outlined in the disclaimer above will supersede the terms and conditions contained within the Premier Customer Services Description.

name: Release OrgDemo

on:
  workflow_dispatch:
  release:
    types: [created]
env:
  solution-name: 'OrgDemo'
  use-setting-file: false
  branch-type: 'main'
  branch-name: ''
permissions:
  contents: write

jobs:
  release-staging-setup:
    environment: 'Contoso Staging'
    runs-on: ubuntu-latest
    outputs:
      setting-file: ${{ steps.staging-env-variables.outputs.setting-file }}
      solution-name: ${{ steps.staging-env-variables.outputs.solution-name }}
      branch-type: ${{ steps.staging-env-variables.outputs.branch-type }}
      branch-name: ${{ steps.staging-env-variables.outputs.branch-name }}
    steps: 
    - name: Checkout branch main
      uses: actions/checkout@v4
      with:
        lfs: true
    - name: Set environment variables to env variable
      id: staging-env-variables
      run: |        
        write-Host "ref ${{ github.ref }}"        
        write-Host "GITHUB_REF ${{ github.GITHUB_REF }}"
        if ('${{ env.use-setting-file }}' -eq 'true')
        {
          if (Test-Path -LiteralPath "settings/${{ env.solution-name }}-Contoso Staging.json") {
            $settingFile = 'settings/${{ env.solution-name }}-Contoso Staging.json'
            write-host "Settings files $settingFile found"
          } else {
            $settingFile = ''
            write-host "Settings files settings/${{ env.solution-name }}-Contoso Staging.json not found"
          }        
        } else {
          write-host "No Settings files required"
          $settingFile = ''
        }
        echo "'${{ env.solution-name }}'"
        echo "'$settingFile'"
        echo "setting-file=$settingFile" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append;
        echo "solution-name=${{ env.solution-name }}" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append;
        echo "branch-name=${{ env.branch-name }}" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append;
        echo "branch-type=${{ env.branch-type }}" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append;
      shell: pwsh
    # - name: Set environment variables to output
    #   id: staging-variables
    #   run: | 
    #     echo "setting-file=${{ env.setting-file }}" >> "$GITHUB_OUTPUT"
    #     echo "solution-name=${{ env.solution-name }}" >> "$GITHUB_OUTPUT"
    #     echo "branch-name=${{ env.branch-name }}" >> "$GITHUB_OUTPUT"
    #     echo "branch-type=${{ env.branch-type }}" >> "$GITHUB_OUTPUT"
  release-staging-output:
    needs: release-staging-setup
    runs-on: ubuntu-latest
    steps: 
    - name: check environment variables 
      run: |    
        echo "${{ needs.release-staging-setup.outputs.solution-name }}"
        echo "${{ needs.release-staging-setup.outputs.branch-name }}"
        echo "${{ needs.release-staging-setup.outputs.branch-type }}"
        echo "${{ needs.release-staging-setup.outputs.setting-file }}"
  release-staging:
    needs: [release-staging-setup]
    uses: Contoso-Enterprise/PowerPlatformALM/.github/workflows/workflow-import-solution.yml@main
    with:
      environment: 'Contoso Staging'
      solution-name: ${{ needs.release-staging-setup.outputs.solution-name }}
      branch-name: '${{ needs.release-staging-setup.outputs.branch-name }}'
      branch-type: '${{ needs.release-staging-setup.outputs.branch-type }}'
      settings-file: ${{ needs.release-staging-setup.outputs.setting-file }}
      folder-path: '.'
      managed: true
    secrets: inherit
  release-production-setup:
    needs: [release-staging]
    environment: 'Contoso Production'
    runs-on: ubuntu-latest
    outputs:
      setting-file: ${{ steps.production-variables.outputs.setting-file }}
      solution-name: ${{ steps.production-variables.outputs.solution-name }}
      branch-type: ${{ steps.production-variables.outputs.branch-type }}
      branch-name: ${{ steps.production-variables.outputs.branch-name }}
    steps: 
    - name: Production Variables      
      id: production-variables
      run: |        
        write-Host "ref ${{ github.ref }}"        
        write-Host "GITHUB_REF ${{ github.GITHUB_REF }}"
        if ('${{ env.use-setting-file }}' -eq 'true')
        {

          if (Test-Path -LiteralPath "settings/${{ env.solution-name }}-Contoso Production.json") {
            $settingFile = 'settings/${{ env.solution-name }}-Contoso Production.json'
          } else {
            $settingFile = ''
          }
        } else {
          $settingFile = ''
        }
        echo "setting-file=$settingFile" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append;
        echo "solution-name=${{ env.solution-name }}" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append;
        echo "branch-name=${{ env.branch-name }}" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append;
        echo "branch-type=${{ env.branch-type }}" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append;
      shell: pwsh
  release-production:
    needs: [release-production-setup]
    uses: Contoso-Enterprise/PowerPlatformALM/.github/workflows/workflow-import-solution.yml@main
    with: 
      environment: 'Contoso Production'
      solution-name: ${{ needs.release-production-setup.outputs.solution-name }}
      branch-name: '${{ needs.release-production-setup.outputs.branch-name }}'
      branch-type: '${{ needs.release-production-setup.outputs.branch-type }}'
      folder-path: '.'
      settings-file: ${{ needs.release-production-setup.outputs.setting-file }}
      managed: true
    secrets: inherit
